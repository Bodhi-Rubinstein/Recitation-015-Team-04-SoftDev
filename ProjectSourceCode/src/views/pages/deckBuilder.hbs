<div class="container my-5">
  <h2 class="mb-4">Deck Builder</h2>
  <form action="/deckbuilder" method="POST">
    <div class="row mb-3">
      <div class="col">
        <label for="card1" class="form-label">Card 1</label>
        <select id="card1" name="card1" class="form-select" required>
          <option value="">Select a card</option>

          {{#each availableCards}}

            <option value="{{this.id}}">{{this.name}}
              (Atk:
              {{this.attack}}, Def:
              {{this.defense}})</option>
          {{/each}}
        </select>
      </div>
      <div class="col">
        <label for="card2" class="form-label">Card 2</label>
        <select id="card2" name="card2" class="form-select" required>
          <option value="">Select a card</option>
          {{#each availableCards}}
            <option value="{{this.id}}">{{this.name}}
              (Atk:
              {{this.attack}}, Def:
              {{this.defense}})</option>
          {{/each}}
        </select>
      </div>
    </div>
    <div class="row mb-3">
      <div class="col">
        <label for="card3" class="form-label">Card 3</label>
        <select id="card3" name="card3" class="form-select" required>
          <option value="">Select a card</option>
          {{#each availableCards}}
            <option value="{{this.id}}">{{this.name}}
              (Atk:
              {{this.attack}}, Def:
              {{this.defense}})</option>
          {{/each}}
        </select>
      </div>
      <div class="col">
        <label for="card4" class="form-label">Card 4</label>
        <select id="card4" name="card4" class="form-select" required>
          <option value="">Select a card</option>
          {{#each availableCards}}
            <option value="{{this.id}}">{{this.name}}
              (Atk:
              {{this.attack}}, Def:
              {{this.defense}})</option>
          {{/each}}
        </select>
      </div>
    </div>
    <div class="row mb-3">
      <div class="col">
        <label for="card5" class="form-label">Card 5</label>
        <select id="card5" name="card5" class="form-select" required>
          <option value="">Select a card</option>
          {{#each availableCards}}
            <option value="{{this.id}}">{{this.name}}
              (Atk:
              {{this.attack}}, Def:
              {{this.defense}})</option>
          {{/each}}
        </select>
      </div>
    </div>
    <button type="submit" class="btn btn-primary">Create Deck</button>
  </form>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () { const cardSelects
  = document.querySelectorAll('select[id^="card"]'); // Function to update the
  options in all dropdowns const updateOptions = () => { //put all selected vals
  into an array const selectedValues = Array.from(cardSelects).map(select =>
  select.value); // Update each dropdown cardSelects.forEach(select => { const
  currentValue = select.value; // Keep the current value selected
  Array.from(select.options).forEach(option => { // Loop through each option if
  (option.value === '') { // Always keep the default "Select a card" option
  enabled option.disabled = false; } else if
  (selectedValues.includes(option.value) && option.value !== currentValue) { //
  Disable the option if it's selected in another dropdown option.disabled =
  true; } else { // Enable the option if it's not selected elsewhere
  option.disabled = false; } }); }); }; // Add event listeners to all dropdowns
  cardSelects.forEach(select => { select.addEventListener('change',
  updateOptions); }); // Initialize the options on page load updateOptions();
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () { const cardSelects
  = document.querySelectorAll('select[id^="card"]'); const updateOptions = () =>
  { //put all selected vals into an array const selectedValues =
  Array.from(cardSelects).map(select => select.value);
  cardSelects.forEach(select => { const currentValue = select.value; //current
  val selected Array.from(select.options).forEach(option => { //loop thru each
  option if (option.value === '') { //select a card alw enabled option.disabled
  = false; } else if (selectedValues.includes(option.value) && option.value !==
  currentValue) { //if the option is selected elsewhere option.disabled = true;
  } else { //otherwise enable it option.disabled = false; } }); }); }; // Add
  event listeners to all dropdowns cardSelects.forEach(select => {
  select.addEventListener('change', updateOptions); }); // Initialize the
  options on page load updateOptions(); });
</script>