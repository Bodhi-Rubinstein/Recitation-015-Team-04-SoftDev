<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Open Pack</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"> <!-- include bootstrap -->
  <link rel="stylesheet" href="../resources/css/openPack.css"> <!-- include custom stylesheet -->
</head>
<body>
  <main class="container mt-4">
    <div class="card mx-auto" style="max-width: 1000px;">
      <div class="card-body text-center">
        <h1 class="card-title mb-4">Open Pack</h1>
        <p>Click the chest below to open a pack!</p>
        <img
          src="../resources/img/FORNITE.jpg"
          alt="Open Pack"
          class="open-pack-image"
          id="openPackButton"
        />
        <div id="packResult" class="mt-4"></div>
        <div id="packContents" class="mt-4"></div>
        <div id="errorMessage" class="mt-4 text-danger"></div>
        <div id="successMessage" class="mt-4 text-success"></div>

        <!-- Redirect buttons -->
        <div id="actionButtons" class="mt-4" style="display: none;">
          <a href="/collection" class="btn btn-secondary me-3">View in Your Collection</a>
          <a href="/deckbuilder" class="btn btn-success">Build a Deck!</a>
        </div>
      </div>
    </div>
  </main>

  <script>
    document.getElementById('openPackButton').addEventListener('click', async function () {
      const errorMessage = document.getElementById('errorMessage');
      const successMessage = document.getElementById('successMessage');
      const packContents = document.getElementById('packContents');
      const actionButtons = document.getElementById('actionButtons');

      // Clear previous messages
      errorMessage.textContent = '';
      successMessage.textContent = '';
      packContents.textContent = '';

      try {
        // Send a POST request to the server
        const response = await fetch('/open-pack', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
        });

        const data = await response.json();

        if (data.success) {
          successMessage.textContent = data.message;

          // Create a row to contain the cards
          const row = document.createElement('div');
          row.className = 'row justify-content-center flex-wrap gap-3';

          // Loop through each received card name and build a card element for it
          // Append all cards first (as face-down)
          data.packContents.forEach((card, index) => {
            const col = document.createElement('div');
            col.className = 'card-slot';
            col.style.width = '180px';

            const cardDiv = document.createElement('div');
            cardDiv.className = 'flip-card';

            const inner = document.createElement('div');
            inner.className = 'flip-card-inner face-down'; // Start hidden

            // Front (card back image)
            const front = document.createElement('div');
            front.className = 'flip-card-front';
            front.innerHTML = `<img src="../resources/img//cards/card_back.png" class="card-img" alt="Back">`;

            // Back (actual card)
            const back = document.createElement('div');
            back.className = 'flip-card-back';
            back.innerHTML = `<img src="../resources/img/cards/${card.image_url}" class="card-img glow-border" alt="${card.name}">`;

            inner.appendChild(front);
            inner.appendChild(back);
            cardDiv.appendChild(inner);
            col.appendChild(cardDiv);
            row.appendChild(col);
          

          
          cardDiv.style.opacity=0.5;
            // Delay reveal
            setTimeout(() => {
              inner.classList.remove('face-down');
              inner.classList.add('flipped');
              cardDiv.style.transtion = 'opacity 0.4s'
              cardDiv.style.opacity = 1
            }, 1000 + 800 * index); // 500ms delay between cards
          });


          // Append the row of cards to the packContents container
          packContents.appendChild(row);

          // Show the action buttons
          actionButtons.style.display = 'block';
        } else {
          errorMessage.textContent = data.message;
        }
      } catch (error) {
        errorMessage.textContent = 'An error occurred. Please try again later.';
      }
    });
  </script>
</body>
</html>